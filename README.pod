---
name: podium
description: POD parser and tool
---

=pod

=head1 Podium

=head2 Playground

You can try Podium in your browser at L<https://pod.deno.dev/>.

=head2 Description

This is a parser and tool for L<Plain Old Documentation (POD)|https://perldoc.perl.org/perlpod>.

=head2 Features

POD parser provides a convenient way to write documentation and comes with the
following features:

=over

=item * Easy-to-read syntax

=item * Multiple output formats (HTML, Markdown, LaTeX, Vimdoc)

=item * Command line interface for simple conversion

=item * Extensible for integration into other projects

=back

To get started using POD, download a file and follow
the usage instructions provided in the subsequent sections.

=head2 Installation

  $ wget https://raw.githubusercontent.com/tani/podium/main/podium.lua
  $ chmod +x podium.lua

=head2 Usage

=head3 WebAPI

  $ curl -X POST -d `$(cat path/to/file.pod)` https://pod.deno.dev/html
  $ cat path/to/file.pod | curl -X POST -d @- https://pod.deno.dev/latex

=head3 Command Line Interface

  $ podium.lua markdown path/to/file.pod path/to/file.md   # write markdown
  $ podium.lua latex    path/to/file.pod path/to/file.tex  # write latex
  $ podium.lua vimdoc   path/to/file.pod path/to/file.txt  # write vimdoc
  $ podium.lua html     path/to/file.pod path/to/file.html # write html

  $ podium.lua html path/to/file.pod > path/to/file.html # wirte html to stdout
  $ podium.lua html < path/to/file.pod > path/to/file.html # write html to stdout, read pod from stdin

=head3 Application Programming Interface

  local podium = require('podium')
  local inputString = "..."
  local outputFormat = podium.html -- or podium.markdown, podium.latex
  podium.process(inputString, outputFormat) -- returns output string

=head2 License

Licensed under MIT License.

Copyright (c) 2022 TANIGUCHI Masaya

=cut
